<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Entropic Legos</title>
    <link>https://susmit31.github.io/entropic-legos/posts/</link>
    <description>Recent content in Posts on Entropic Legos</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <managingEditor>hugo@example.com (Entropic Legos)</managingEditor>
    <webMaster>hugo@example.com (Entropic Legos)</webMaster>
    <lastBuildDate>Tue, 24 Jun 2025 23:19:55 +0600</lastBuildDate>
    <atom:link href="https://susmit31.github.io/entropic-legos/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Absistence and Other Metaphysical Quandaries</title>
      <link>https://susmit31.github.io/entropic-legos/posts/absistence/</link>
      <pubDate>Tue, 24 Jun 2025 23:19:55 +0600</pubDate><author>hugo@example.com (Entropic Legos)</author>
      <guid>https://susmit31.github.io/entropic-legos/posts/absistence/</guid>
      <description>&lt;h1 id=&#34;how-can-nonexistent-objects-be&#34;&gt;How Can Nonexistent Objects &amp;ldquo;Be&amp;rdquo;?&lt;/h1&gt;&#xA;&lt;p&gt;I discussed in a previous post the view of Meinong on levels of ontological being. Meinong&amp;rsquo;s idea drew much ridicule at his time (&amp;ldquo;Meinong&amp;rsquo;s jungle&amp;rdquo;), but I think Meinong&amp;rsquo;s framework is a very valid approach for doing philosophy especially in &amp;ldquo;ordinary language&amp;rdquo;, rather than in the strict formalism mathematics and logic, in which such &amp;ldquo;objects&amp;rdquo; are immediately dismissed. In what follows I&amp;rsquo;ll put forth my framework to elucidate some of the confusing issues on this front.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Philosophy of Religion by Murray and Rea First Thoughts: Chapter 1 - Part 1</title>
      <link>https://susmit31.github.io/entropic-legos/posts/cambridge-philosophy-of-religion-c1p1/</link>
      <pubDate>Sun, 22 Jun 2025 23:42:32 +0600</pubDate><author>hugo@example.com (Entropic Legos)</author>
      <guid>https://susmit31.github.io/entropic-legos/posts/cambridge-philosophy-of-religion-c1p1/</guid>
      <description>&lt;h1 id=&#34;god-epistemology-and-ontology&#34;&gt;God: Epistemology and Ontology&lt;/h1&gt;&#xA;&lt;p&gt;The following includes my first thoughts while reading &lt;em&gt;An Introduction to the Philosophy of Religion&lt;/em&gt; by Murray and Rea, largely unfiltered. This is the first part of my collected thoughts on chapter 1, in which rather than discussing directly what has been talked about in the chapter itself, I have written down my perspectives on how to go about solving the epistemological and metaphysical problems associated with the question of God. In the next part, in shaa Allah, I will write about what exactly has been discussed in the chapter and how that fits (or does not) with my framework captured below.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Everywhere Yet Nowhere: The Ontological Status of Energy</title>
      <link>https://susmit31.github.io/entropic-legos/posts/energy-ontology/</link>
      <pubDate>Fri, 20 Jun 2025 18:37:18 +0600</pubDate><author>hugo@example.com (Entropic Legos)</author>
      <guid>https://susmit31.github.io/entropic-legos/posts/energy-ontology/</guid>
      <description>&lt;h1 id=&#34;energy-is-everywhere-or-is-it&#34;&gt;Energy is Everywhere. Or Is It?&lt;/h1&gt;&#xA;&lt;p&gt;We love energy. Our civilisation is built on energy. Each phase in the history of the human civilisation is marked by inventing some radically more efficient way to extract energy from some &amp;ldquo;stored form&amp;rdquo;. From eating fruits and veggies storing energy obtained from the sun to burning the carcasses of them to smashing subatomic particles off of each other, we&amp;rsquo;ve certainly come a long way. We can extract energy &amp;ldquo;hidden&amp;rdquo; in even the remotest corner of the smallest conceivable energy storage - an atom. And with all this energy we power our homes, our offices, our factories, and most importantly, our electronic appliances, including the one we&amp;rsquo;re reading/writing this post on. But &lt;em&gt;what exactly&lt;/em&gt; is energy?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Making Castles in the Air: How Econ 101 Butchers Math - Part 1 </title>
      <link>https://susmit31.github.io/entropic-legos/posts/symmetry-econ/</link>
      <pubDate>Sun, 04 May 2025 16:48:41 +0600</pubDate><author>hugo@example.com (Entropic Legos)</author>
      <guid>https://susmit31.github.io/entropic-legos/posts/symmetry-econ/</guid>
      <description>&lt;h1 id=&#34;using-symmetry-to-expose-the-fraud-poster-child-of-economics&#34;&gt;Using Symmetry to Expose the Fraud Poster Child of Economics&lt;/h1&gt;&#xA;&lt;p&gt;Whenever we hear of the term &amp;ldquo;economics&amp;rdquo;, the first picture that comes to mind is that of money. The second picture, if you&amp;rsquo;ve been put through at least some sort of formal economic education as in high schools, is the famous supply-and-demand curves. They&amp;rsquo;re the ubiquitous poster-child of the field of economics, the same as $E = mc^2$ or the apocryphal &amp;ldquo;&lt;em&gt;apple falling on Sir Isaac&amp;rsquo;s head&lt;/em&gt;&amp;rdquo; in the field of physics. Despite the provocative title, I know and appreciate these models within their scope of usage, and the intent of this essay remains more mathematical than economical. As a noneconomist, I don&amp;rsquo;t really know how much they&amp;rsquo;re used in advanced economic work, but in public discourse of economic policymaking, they have proven so far to be invaluable assets, shedding light on everything starting from local egg prices and the exchange rates in a forex market to economic policymaking on a global level. Yet its mathematical underpinnings seem woefully underexplored. This essay will be an outsider&amp;rsquo;s journey into attempting to formalize the immensely influential yet rather nebulous hand-wavy tools. The goal is, at the very least, to serve as a good demo of how simple mathematical principles and &amp;ldquo;gut feelings&amp;rdquo;, pursued with determination, can lead to delightfully pleasant results. My starting point into the attack will be to a simple and seemingly reasonable hypothesis: &lt;em&gt;the supply curve can be viewed as a demand curve for money from the seller&amp;rsquo;s perspective&lt;/em&gt;. But first, let&amp;rsquo;s review a bit about the classical model and see where it shines rather dazzlingly.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mind Theory Update</title>
      <link>https://susmit31.github.io/entropic-legos/posts/mind-theory-update/</link>
      <pubDate>Mon, 17 Feb 2025 23:40:49 +0600</pubDate><author>hugo@example.com (Entropic Legos)</author>
      <guid>https://susmit31.github.io/entropic-legos/posts/mind-theory-update/</guid>
      <description>&lt;h1 id=&#34;the-consciousness-conundrum&#34;&gt;The Consciousness Conundrum&lt;/h1&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve been gone from the blog for months. In the meantime, my country has witnessed a successful overthrowing of a tyrant called Sheikh Hasina, among other things. The last time I posted it was about &lt;em&gt;the Zig programming language&lt;/em&gt; and about &lt;em&gt;Plato&amp;rsquo;s Republic&lt;/em&gt;. Because I have the attention span of a little child, I&amp;rsquo;ve obviously still &lt;em&gt;not finished&lt;/em&gt; learning Zig, nor have I finished going through &lt;em&gt;The Republic&lt;/em&gt;. I&amp;rsquo;ve been bouncing from one interest to another like a pinball in a pinball machine - from working with Arduino and ESP32 to building raw logic gates with transistors on a breadboard, from Plato to Wittgenstein, from Hodgkin-Huxley to Hopfield, and from graph theory to category theory - I&amp;rsquo;ve been exploring quite a vast terrain over these past months. And as rare as this may be, I for the first time in my life feel that I&amp;rsquo;m finding a common thread running through all my interests. And it&amp;rsquo;s the consciousness conundrum.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Understanding Plato&#39;s Republic</title>
      <link>https://susmit31.github.io/entropic-legos/posts/republic-part-1/</link>
      <pubDate>Fri, 02 Aug 2024 15:13:44 +0600</pubDate><author>hugo@example.com (Entropic Legos)</author>
      <guid>https://susmit31.github.io/entropic-legos/posts/republic-part-1/</guid>
      <description>&lt;h1 id=&#34;understanding-platos-republic---e1&#34;&gt;Understanding Plato&amp;rsquo;s Republic - E1&lt;/h1&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;This the first episode in (hopefully) a series of several articles where I narrate my own understanding of &lt;em&gt;The Republic&lt;/em&gt;, the magnum opus of &lt;em&gt;Plato&lt;/em&gt;. In this episode, I discuss about the very initial parts of chapter 1 of the book. I give an overview of what transpires before Thrasymachus (while Socrates&amp;rsquo; dialogues contain a lot of different characters much like a play, the exact names of them are not so important to take note of except for a few prominent figures that play a crucial role in Socrates&amp;rsquo; arguments), the most vocal and prominent interlocutor of Socrates in chapter 1, starts engaging with Socrates. (This covers up to page 14 of the &lt;em&gt;Penguin Classics&lt;/em&gt; translation.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Exploring the Zig Programming Language: Part 2</title>
      <link>https://susmit31.github.io/entropic-legos/posts/speed-test/</link>
      <pubDate>Wed, 26 Jun 2024 23:15:37 +0600</pubDate><author>hugo@example.com (Entropic Legos)</author>
      <guid>https://susmit31.github.io/entropic-legos/posts/speed-test/</guid>
      <description>&lt;h1 id=&#34;zig-is-said-to-be-blazingly-fast-but-what-exactly-is-blazingly-fast&#34;&gt;Zig is said to be &amp;ldquo;blazingly fast&amp;rdquo;. But what exactly is &amp;ldquo;blazingly fast&amp;rdquo;?&lt;/h1&gt;&#xA;&lt;p&gt;Zig is certainly one of the more fun languages I&amp;rsquo;ve coded in. But how fast is it? Let&amp;rsquo;s compare it with some other top contenders, such as C, Rust, and Go. For scale, we will also put to test one of the more popular interpreted languages, Python.&lt;/p&gt;&#xA;&lt;h2 id=&#34;but-how-do-we-measure-their-speed&#34;&gt;But How Do We Measure Their Speed?&lt;/h2&gt;&#xA;&lt;p&gt;As computers are stupendously fast these days, they perform most tasks in the blink of an eye. It&amp;rsquo;s hard to write a piece of code that will be both small (i.e. can be written within a few minutes) and computationally intensive (i.e. require a noticeable amount of execution time). A hack we can use, though, is using a stupid algorithm for a simple task. For example, for our purposes, I&amp;rsquo;ve chosen the recursive computation of the Fibonacci sequence, which has an exponential time complexity (compare this to the dynamic programming approach, which has a linear time complexity). This means, for example, the execution time for calculating the &lt;em&gt;N&lt;/em&gt;-th Fibonacci number with this algorithm will be, say, &lt;em&gt;x&lt;/em&gt; times that of the &lt;em&gt;(N-1)&lt;/em&gt;-th Fibonacci number, and &lt;em&gt;x^2&lt;/em&gt; times that of &lt;em&gt;(N-2)&lt;/em&gt;-th Fibonacci number, and so on. So as we scale the problem upwards, the execution time increases geometrically.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Exploring the Zig Programming Language: Part 1</title>
      <link>https://susmit31.github.io/entropic-legos/posts/zigshaw/</link>
      <pubDate>Mon, 24 Jun 2024 23:36:33 +0600</pubDate><author>hugo@example.com (Entropic Legos)</author>
      <guid>https://susmit31.github.io/entropic-legos/posts/zigshaw/</guid>
      <description>&lt;h1 id=&#34;writing-a-unix-like-shell-in-zig&#34;&gt;Writing a UNIX-like Shell in Zig&lt;/h1&gt;&#xA;&lt;p&gt;This is the first in (hopefully) a series of posts I intend to make about stuff I try out in the &lt;em&gt;Zig&lt;/em&gt; programming language. After having been exposed to it for around 5 days, I&amp;rsquo;ve started to develop a sort-of love-hate relationship with the language. The syntax, in general, feels great to me. It&amp;rsquo;s low-level, compiled, fast. But on the other hand, the documentation, especially that of the standard library, is horrendous - virtually nonexistent, apart from a cryptic comment for every function, struct or whatever. Existing tutorials are often out-of-date owing to the fact that the language is still hasn&amp;rsquo;t had a full 1.x release, and &amp;ldquo;old&amp;rdquo; unwanted features are apparently being dropped by the devs every now and then.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
